package gildasai

import (
	"image"
	"image/draw"
	"testing"

	"github.com/fogleman/gg"
	"github.com/gildasch/gildas-ai/imageutils"
	"github.com/stretchr/testify/require"
)

func TestCenter(t *testing.T) {
	full, err := imageutils.FromFile("testdata/group.jpg")
	require.NoError(t, err)

	cropped := image.NewRGBA(gaspardBounds)

	draw.Draw(cropped, cropped.Bounds(), full, cropped.Bounds().Min, draw.Src)

	landmarks := gaspardLandmarks

	centered := landmarks.Center(cropped, full)

	gg.SavePNG("out-centerd-rotated.png", centered)
}

func TestCenterKeanu(t *testing.T) {
	full, err := imageutils.FromFile("testdata/keanu.jpg")
	require.NoError(t, err)

	cropped := image.NewRGBA(keanuBounds)

	draw.Draw(cropped, cropped.Bounds(), full, cropped.Bounds().Min, draw.Src)

	landmarks := keanuLandmarks

	centered := landmarks.Center(cropped, full)

	gg.SavePNG("out-keanu-centerd-rotated.png", centered)
}

var (
	gaspardBounds    = image.Rect(3250, 355, 3525, 700)
	gaspardLandmarks = &Landmarks{
		Coords: []float32{
			0.042623054, 0.49933276,
			0.05878957, 0.5952669,
			0.08569466, 0.6833858,
			0.12724529, 0.7606633,
			0.1818431, 0.8499347,
			0.24745741, 0.9136888,
			0.30940554, 0.95313835,
			0.38454503, 0.9982595,
			0.513531, 1.0121591,
			0.6429833, 0.9539188,
			0.7473073, 0.8844672,
			0.82714605, 0.82072514,
			0.8914305, 0.7313234,
			0.9243405, 0.63034034,
			0.9271319, 0.5325623,
			0.9256201, 0.4253915,
			0.9112879, 0.30790403,
			0.046376243, 0.3809035,
			0.07394844, 0.34416354,
			0.116788834, 0.32137054,
			0.16632016, 0.31397152,
			0.21358678, 0.3226959,
			0.40847805, 0.2808878,
			0.4565229, 0.25242186,
			0.5230905, 0.23079628,
			0.6066938, 0.22973013,
			0.6841315, 0.2454338,
			0.32519954, 0.39748943,
			0.3244735, 0.45990664,
			0.31987455, 0.5123901,
			0.32122666, 0.56566656,
			0.30662543, 0.6214479,
			0.32983726, 0.6243069,
			0.36725587, 0.62359726,
			0.41130427, 0.6057981,
			0.44566816, 0.59171915,
			0.13693592, 0.43995512,
			0.15758857, 0.42265582,
			0.20519389, 0.4100879,
			0.25911996, 0.42105013,
			0.21946324, 0.4449932,
			0.16966568, 0.45142734,
			0.4640793, 0.3733161,
			0.5031516, 0.34214935,
			0.55386484, 0.33491662,
			0.6075828, 0.34272826,
			0.56412274, 0.36795574,
			0.50765425, 0.37458557,
			0.29181966, 0.78519344,
			0.29914382, 0.7254351,
			0.34905833, 0.6860953,
			0.38662934, 0.68381274,
			0.4217912, 0.6680737,
			0.5211706, 0.6857454,
			0.6095099, 0.72453964,
			0.55541813, 0.81748855,
			0.5035857, 0.8662245,
			0.44260082, 0.88889015,
			0.39043584, 0.8903161,
			0.33942842, 0.8616308,
			0.29765832, 0.78365093,
			0.35117102, 0.72269136,
			0.3979019, 0.7108746,
			0.45688528, 0.70578057,
			0.5991676, 0.7259787,
			0.4865557, 0.8208107,
			0.43391302, 0.84126765,
			0.3846457, 0.841631,
		},
	}

	keanuBounds    = image.Rect(68, 64, 177, 204)
	keanuLandmarks = &Landmarks{
		Coords: []float32{
			0.041536823, 0.18441524,
			0.03137656, 0.311353,
			0.034661844, 0.43165296,
			0.042664155, 0.5324132,
			0.062233992, 0.6530917,
			0.11007561, 0.76317525,
			0.17603977, 0.85339415,
			0.26635653, 0.9445688,
			0.40089193, 1.005088,
			0.54408646, 0.9883865,
			0.6477598, 0.9338468,
			0.73505175, 0.8772329,
			0.8175446, 0.7877053,
			0.88004434, 0.6811866,
			0.9196022, 0.5800287,
			0.95880246, 0.47212145,
			0.9838103, 0.3505491,
			0.16257623, 0.19881259,
			0.23055145, 0.20058155,
			0.30340588, 0.21583107,
			0.369469, 0.2399858,
			0.42611682, 0.27243304,
			0.64689445, 0.30983007,
			0.7076894, 0.299968,
			0.7772289, 0.29661912,
			0.85011995, 0.30304813,
			0.90227973, 0.31750047,
			0.5142711, 0.38741708,
			0.5001936, 0.47096682,
			0.48487246, 0.55433667,
			0.47108087, 0.62494826,
			0.39036942, 0.6240499,
			0.4204656, 0.6482485,
			0.46150482, 0.66600966,
			0.50579965, 0.6600766,
			0.540297, 0.65211415,
			0.23664789, 0.2935271,
			0.28522167, 0.29402086,
			0.34398016, 0.2990428,
			0.39202273, 0.33808482,
			0.34212753, 0.34709647,
			0.27851155, 0.33246934,
			0.6364438, 0.37657613,
			0.69353104, 0.35440335,
			0.7561514, 0.36595786,
			0.79388344, 0.38859954,
			0.747334, 0.4120766,
			0.68511003, 0.39807123,
			0.28202218, 0.72298163,
			0.34268212, 0.7282313,
			0.4108359, 0.73236036,
			0.4456454, 0.74512625,
			0.47842515, 0.7402816,
			0.54747057, 0.76526994,
			0.60169786, 0.7774644,
			0.5337008, 0.8027945,
			0.4822871, 0.8142794,
			0.43006966, 0.8124816,
			0.38589644, 0.7994945,
			0.33437774, 0.77294934,
			0.29202875, 0.7261901,
			0.39068455, 0.75861204,
			0.43922392, 0.7670897,
			0.48739505, 0.7737111,
			0.5887002, 0.77507746,
			0.4863823, 0.76607096,
			0.44191745, 0.7619746,
			0.3970489, 0.75257295,
		},
	}
)
